<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
     http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
     http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
     http://www.springframework.org/schema/context 
     http://www.springframework.org/schema/context/spring-context-3.2.xsd
     http://www.springframework.org/schema/task 
     http://www.springframework.org/schema/task/spring-task-3.2.xsd
     http://www.springframework.org/schema/mvc
	 http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
     " default-lazy-init="false">


	<!-- 导入外部文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"
		ignore-unresolvable="true" />

	<!-- 配置dataSource -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}" />

	</bean>

	<!-- 配置Hibernate sessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
		<property name="entityInterceptor">
			<bean id="queryInterceptor" class="org.ever4j.main.interceptor.QueryInterceptor" />
		</property>
		<property name="packagesToScan"
			value="org.ever4j.*.entity,com.eversec.*.*.entity,com.eversec.*.*.dao" />
	</bean>


	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

<!-- 配置Mybatis sessionFactory -->
<!-- 	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> -->
<!--         <property name="dataSource" ref="dataSource" /> -->
<!--         <property name="configLocation" value="classpath:mybatis-config.xml"></property> -->
<!--        <property name="typeAliasesPackage" value="com.junfu360.mybatis.entity"></property> -->
<!--         <property name="mapperLocations" value="classpath:com/junfu360/mybatis/mapper/*.xml"></property> -->
<!--         <property name="plugins"> -->
<!--             <list> -->
<!--                 <bean -->
<!--                     class="com.github.miemiedev.mybatis.paginator.OffsetLimitInterceptor"> -->
<!--                     <property name="dialectClass" -->
<!--                         value="com.github.miemiedev.mybatis.paginator.dialect.OracleDialect"></property> -->
<!--                 </bean> -->
<!--             </list> -->
<!--         </property> -->
<!--     </bean> -->
<!--     <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> -->
<!--         <property name="basePackage" value="com.junfu360.mybatis.dao" /> -->
<!--     </bean> -->

	<!-- 配置事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 配置异常管理 -->
	<bean id="customExceptionHandler" class="org.ever4j.main.exception.CustomExceptionHandler"/>

	<!-- 激活Spring注解方式：事务处理 -->
<!-- 	<tx:annotation-driven transaction-manager="transactionManager" /> -->
	<tx:annotation-driven transaction-manager="transactionManager" />


	<!-- 激活Spring注解方式：自动扫描，并注入bean -->
	<context:component-scan base-package="org.ever4j.*.*" />
	<context:component-scan base-package="com.eversec.*.*.*" />
	
	<!-- 性能监控 -->
<!-- 	<bean id="performanceMonitor" -->
<!--           class="org.springframework.aop.interceptor.PerformanceMonitorInterceptor" /> -->

<!-- 	<aop:config> -->
<!-- 	    <aop:pointcut id="allServiceMethods" expression="execution(* com.junfu360.*.*.action.*(..))"/> -->
<!-- 	    <aop:advisor pointcut-ref="allServiceMethods" advice-ref="performanceMonitor" order="2"/> -->
<!-- 	</aop:config> -->
 	<!-- 日志记录-->
 	<bean id="loggerAdvice" class="org.ever4j.utils.aop.LoggerAdvice" />
	<aop:config proxy-target-class="true"></aop:config>
	<aop:config>  
     	<aop:advisor pointcut="execution(* org.base4j.orm.hibernate.BaseService+.save*(..)) " advice-ref="loggerAdvice"/>  
     	<aop:advisor pointcut="execution(* org.base4j.orm.hibernate.BaseService+.delete*(..)) " advice-ref="loggerAdvice"/>  
     	<aop:advisor pointcut="execution(* org.base4j.orm.hibernate.BaseService+.update*(..)) " advice-ref="loggerAdvice"/>  
    </aop:config>  
    
<!-- 	<bean id="jedisUtil" class="com.junfu360.common.utils.JedisUtil"> -->
<!-- 		<property name="maxTotal" value="${jedis.maxTotal}"></property> -->
<!-- 		<property name="maxIdel" value="${jedis.maxIdel}"></property> -->
<!-- 		<property name="maxWaitTime" value="${jedis.maxWaitTime}"></property> -->
<!-- 		<property name="serverLocation" value="${jedis.serverLocation}"></property> -->
<!-- 		<property name="port" value="${jedis.port}"></property> -->
<!-- 	</bean> -->
<!-- 	<bean id="jedisResource" class="com.junfu360.common.utils.JedisResource" init-method="init"> -->
<!-- 		<property name="maxTotal" value="${jedis2.maxTotal}"></property> -->
<!-- 		<property name="host" value="${jedis2.host}"></property> -->
<!-- 		<property name="port" value="${jedis2.port}"></property> -->
<!-- 		<property name="authKey" value="${jedis2.authKey}"></property> -->
<!-- 	</bean> -->
	 
	 <!-- 拦截器 -->
	<mvc:interceptors>
	    <!-- 多个拦截器,顺序执行 -->
	    <mvc:interceptor>
	       <mvc:mapping path="/**" /><!-- 如果不配置或/*,将拦截所有的Controller -->
<!-- 	       <mvc:exclude-mapping path="/loginpage/**"/>  -->
	       <bean class="org.ever4j.interceptors.LoginInterceptor"></bean>
	    </mvc:interceptor>
	</mvc:interceptors>
	
	<!-- http client utils -->
<!--  	<bean id="httpClientUtils" class="com.junfu360.common.utils.HttpClientUtils" init-method="init"> -->
<!-- 		<property name="maxTotal" value="${httpClient.maxTotal}"></property> -->
<!-- 		<property name="defaultMaxPerRoute" value="${httpClient.defaultMaxPerRoute}"></property> -->
<!-- 		<property name="socketTimeout" value="${httpClient.socketTimeout}"></property> -->
<!-- 		<property name="connectTimeout" value="${httpClient.connectTimeout}"></property> -->
<!-- 		<property name="connectionRequestTimeout" value="${httpClient.connectionRequestTimeout}"></property> -->
<!-- 	</bean> -->
</beans>