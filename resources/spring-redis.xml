<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.2.xsd"
	default-lazy-init="false">
	<context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"  />
	<!-- 配置redis池，依次为最大实例数，最大空闲实例数，(创建实例时)最大等待时间，(创建实例时)是否验证 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.maxTotal}" />
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>

	<!-- 使用spring-data-redis配置redis -->
	<!-- redis连接配置：依次为主机ip/端口/密码/是否使用池(usePool=true时) -->
	<!-- <bean id="jedisFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"> 
		<property name="hostName" value="${redis.host}" /> <property name="port" 
		value="${redis.port}" /> <property name="password" value="${redis.pass}" 
		/> <property name="usePool" value="true" /> <property name="poolConfig" ref="jedisPoolConfig" 
		/> </bean> -->

	<!-- redis模板配置 -->
	<!-- <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"> 
		<property name="connectionFactory" ref="jedisFactory" /> 开启事物支持 <property 
		name="enableTransactionSupport" value="true" /> <property name="keySerializer"> 
		<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" 
		/> </property> <property name="valueSerializer"> <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" 
		/> </property> </bean> -->
	<!-- spirng-data-redis配置 /end -->

	<!-- 不利用spring-data-redis配置方式 ,操作更灵活 -->
	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool"
		scope="singleton">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1">
			<list>
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg name="host" value="${redis.uri}" />
				</bean>
			</list>
		</constructor-arg>
	</bean>
	<!-- jedis分片池配置 /end -->

</beans>