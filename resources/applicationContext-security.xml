<?xml version="1.0" encoding="UTF-8"?>

<b:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:b="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<global-method-security pre-post-annotations="enabled">
		<!--expression-handler ref="expressionHandler"/ -->
	</global-method-security>

	<http pattern="/assets/**" security="none" />
	<http pattern="/pages/**" security="none" />
	<http pattern="/test/**" security="none" />
	<http pattern="/x/**" security="none" />
	<http pattern="/login.jsp" security="none" />
	<http pattern="/login/**" security="none" />
	<http pattern="/everad/task/**" security="none" />

	<http use-expressions="true" entry-point-ref="authenticationProcessingFilterEntryPoint">
		<!-- <intercept-url pattern="/sys/main/index" filters="none"/> <intercept-url 
			pattern="/sys/main/getNav" filters="none"/> <intercept-url pattern="/**/list" 
			access="ROLE_LIST" /> <intercept-url pattern="/**/new" access="ROLE_SAVE" 
			/> <intercept-url pattern="/**/edit" access="ROLE_SAVE" /> <intercept-url 
			pattern="/**/save" access="ROLE_SAVE" /> <intercept-url pattern="/**/delete" 
			access="ROLE_DELETE" /> <intercept-url pattern="/**/delAll" access="ROLE_DELEALL" 
			/> -->
			
		<!-- 不要过滤图片、css、js等静态资源 -->

		<!-- "记住我"功能，采用持久化策略（将用户的登录信息存放在数据库表中） -->
		<!--remember-me data-source-ref="dataSource"/ -->

		<!--登录过滤器，包含登录成功、登录失败处理 -->
		<custom-filter ref="loginFilter" position="FORM_LOGIN_FILTER" />

		<!-- 增加一个自定义的filter，放在FILTER_SECURITY_INTERCEPTOR之前，实现用户、角色、权限、资源的数据库管理。 -->
		<custom-filter ref="customSecurityFilter" before="FILTER_SECURITY_INTERCEPTOR" />

		<!--退出时的处理 -->
		<logout invalidate-session="true" logout-url="/j_spring_security_logout"
			success-handler-ref="logoutSuccessHandler" />

		<!-- 检测失效的sessionId,超时时定位到另外一个URL -->
		<session-management invalid-session-url="/sys/main/index4m"></session-management>

	</http>

	<b:bean id="loginFilter"
		class="org.ever4j.security.ValidateCodeUsernamePasswordAuthenticationFilter">
		<!-- 处理登录的action -->
		<b:property name="filterProcessesUrl" value="/j_spring_security_check"></b:property>

		<!--鉴定处理（用户名、密码验证） -->
		<b:property name="authenticationManager" ref="authenticationManager"></b:property>

		<!-- 验证成功后的处理（即登录成功后的处理） -->
		<b:property name="authenticationSuccessHandler" ref="successHandler"></b:property>

		<!-- 验证失败后的处理（即登录失败后的处理） -->
		<b:property name="authenticationFailureHandler" ref="failureHandler"></b:property>

	</b:bean>

	<!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性 -->
	<b:bean id="customSecurityFilter" class="org.ever4j.security.CustomFilterSecurityInterceptor">
		<!--用户名、密码认证 -->
		<b:property name="authenticationManager" ref="authenticationManager" />
		<!--权限认证 -->
		<b:property name="accessDecisionManager" ref="customAccessDecisionManager" />
		<!--数据源定义 -->
		<b:property name="securityMetadataSource" ref="customSecurityMetadataSource" />
	</b:bean>

	<!-- 注意能够为authentication-manager 设置alias别名 -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userDetailsManager">
			<password-encoder ref="passwordEncoder"><!--hash="md5" -->
				<salt-source user-property="username" />
			</password-encoder>
		</authentication-provider>
	</authentication-manager>
	<b:bean id="userDetailsManager" class="org.ever4j.security.CustomUserDetailsService" />
	<!-- 用户的密码加密或解密 -->
	<b:bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />

	<b:bean id="logoutSuccessHandler" class="org.ever4j.security.SysLogoutSuccessHandler" />

	<!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
	<b:bean id="customAccessDecisionManager" class="org.ever4j.security.CustomAccessDecisionManager" />

	<!-- 资源源数据定义，将所有的资源和权限对应关系建立起来，即定义某一资源可以被哪些角色去访问 -->
	<b:bean id="customSecurityMetadataSource"
		class="org.ever4j.security.CustomInvocationSecurityMetadataSourceService" />

	<b:bean id="successHandler" class="org.ever4j.security.AuthenticationSuccessHandler">
		<b:property name="defaultTargetUrl" value="/sys/main/index4m"></b:property>
		<b:property name="alwaysUseDefaultTargetUrl" value="true"></b:property>
	</b:bean>

	<b:bean id="failureHandler" class="org.ever4j.security.AuthenticationFailureHandler">
		<b:property name="defaultFailureUrl" value="/"></b:property>
	</b:bean>

	<b:bean id="authenticationProcessingFilterEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<b:property name="loginFormUrl" value="/"></b:property>
	</b:bean>
</b:beans>
